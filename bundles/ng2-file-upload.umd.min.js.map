{"version":3,"sources":["webpack://ng2-file-upload.umd.min/webpack/universalModuleDefinition","webpack://ng2-file-upload.umd.min/webpack/bootstrap","webpack://ng2-file-upload.umd.min/external \"@angular/core\"","webpack://ng2-file-upload.umd.min/./.tmp/file-upload/file-like-object.class.ts","webpack://ng2-file-upload.umd.min/./.tmp/file-upload/file-item.class.ts","webpack://ng2-file-upload.umd.min/./.tmp/file-upload/file-drop.directive.ts","webpack://ng2-file-upload.umd.min/./.tmp/file-upload/file-select.directive.ts","webpack://ng2-file-upload.umd.min/external \"@angular/common\"","webpack://ng2-file-upload.umd.min/./.tmp/file-upload/file-upload.module.ts","webpack://ng2-file-upload.umd.min/./.tmp/file-upload/file-type.class.ts","webpack://ng2-file-upload.umd.min/./.tmp/file-upload/file-uploader.class.ts","webpack://ng2-file-upload.umd.min/./.tmp/index.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","FileLikeObject","fileOrInput","this","rawFile","fakePathOrObject","node","nodeName","prop","attr","find","isElement","_createFromFakePath","path","lastModifiedDate","size","type","slice","lastIndexOf","toLowerCase","_createFromObject","file_like_object_class_1","FileItem","uploader","some","options","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","index","file","_file","method","alias","itemAlias","upload","uploadItem","e","_onCompleteItem","_onErrorItem","cancel","cancelItem","remove","removeFromQueue","onBeforeUpload","onBuildForm","form","onProgress","onSuccess","response","status","onError","onCancel","onComplete","_onBeforeUpload","_onBuildForm","_onProgress","_onSuccess","_onError","_onCancel","_onComplete","removeAfterUpload","_prepareToUploading","_nextIndex","__decorate","decorators","target","key","desc","arguments","length","getOwnPropertyDescriptor","Reflect","decorate","core_1","FileDropDirective","element","fileOver","EventEmitter","onFileDrop","getOptions","getFilters","onDrop","event","transfer","_getTransfer","filters","_preventAndStop","addToQueue","files","emit","onDragOver","_haveFiles","types","dropEffect","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","indexOf","contains","Input","Output","HostListener","Directive","selector","FileSelectDirective","onFileSelected","isEmptyAfterSelection","nativeElement","attributes","multiple","onChange","common_1","file_drop_directive_1","file_select_directive_1","FileUploadModule","NgModule","imports","CommonModule","declarations","FileType","getMimeClass","mimeClass","mime_psd","match","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","jpg","jpeg","tif","psd","bmp","png","nef","tiff","cr2","dwg","cdr","ai","indd","pin","cdp","skp","stp","3dm","mp3","wav","wma","mod","m4a","compress","zip","rar","7z","lz","z01","bz2","gz","pdf","xls","xlsx","ods","mp4","avi","wmv","mpg","mts","flv","3gp","vob","m4v","mpeg","m2ts","mov","doc","docx","eps","txt","odt","rtf","ppt","pptx","pps","ppsx","odp","chunks","split","extension","undefined","file_item_class_1","file_type_class_1","FileUploader","queue","autoUpload","isHTML5","disableMultipart","formatDataFunction","item","formatDataFunctionIsAsync","setOptions","assign","authToken","authTokenHeader","unshift","fn","_queueLimitFilter","maxFileSize","_fileSizeFilter","allowedFileType","_fileTypeFilter","allowedMimeType","_mimeTypeFilter","_this","list","_i","files_1","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","filter","_failFilterIndex","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","splice","clearQueue","transport","_xhr","_form","abort","items","getNotUploadedItems","cancelAll","isFile","File","isFileLikeObject","getReadyItems","sort","item1","item2","destroy","onAfterAddingAll","fileItems","onBuildItemForm","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","nextItem","_headersGetter","parsedHeaders","_xhrTransport","sendable","that","xhr","XMLHttpRequest","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","parametersBeforeFiles","additionalParameter","keys","forEach","paramVal","replace","onprogress","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","_a","header","setRequestHeader","_b","_c","onreadystatechange","readyState","DONE","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names_1","queueLimit","every","val","parsed","line","trim","_onSuccessItem","__export","file_upload_module_1"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,iBAAAA,QAAA,oBACA,mBAAAC,eAAAC,IACAD,QAAA,mCAAAJ,GACA,iBAAAC,QACAA,QAAA,2BAAAD,EAAAG,QAAA,iBAAAA,QAAA,oBAEAJ,EAAA,2BAAAC,EAAAD,EAAA,iBAAAA,EAAA,oBARA,CASCO,OAAA,SAAAC,EAAAC,GACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAV,QAGA,IAAAC,EAAAO,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAZ,YAUA,OANAa,EAAAH,GAAAI,KAAAb,EAAAD,QAAAC,IAAAD,QAAAS,GAGAR,EAAAW,GAAA,EAGAX,EAAAD,QA2CA,OAtCAS,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAjB,EAAAkB,EAAAC,GACAV,EAAAW,EAAApB,EAAAkB,IACAG,OAAAC,eAAAtB,EAAAkB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAA1B,GACAqB,OAAAC,eAAAtB,EAAA,cAAiD2B,OAAA,KAIjDlB,EAAAmB,EAAA,SAAA3B,GACA,IAAAkB,EAAAlB,KAAA4B,WACA,WAA2B,OAAA5B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAQ,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,IAIAzB,IAAA0B,EAAA,mBCnEAlC,EAAAD,QAAAM,gCCIA,IAAA8B,EAAA,WACA,SAAAA,EAAAC,GACAC,KAAAC,QAAAF,EACA,IACAG,EAPA,SAAAC,GACA,SAAAA,OAAAC,UAAAD,EAAAE,MAAAF,EAAAG,MAAAH,EAAAI,OAKAC,CAAAT,GACAA,EAAAV,MAAAU,EAGAC,KADA,eADA,iBAAAE,EAAA,sBAEAA,GAaA,OAXAJ,EAAAJ,UAAAe,oBAAA,SAAAC,GACAV,KAAAW,sBAAA,EACAX,KAAAY,UAAA,EACAZ,KAAAa,KAAA,QAAAH,EAAAI,MAAAJ,EAAAK,YAAA,QAAAC,cACAhB,KAAApB,KAAA8B,EAAAI,MAAAJ,EAAAK,YAAA,KAAAL,EAAAK,YAAA,UAEAjB,EAAAJ,UAAAuB,kBAAA,SAAAzB,GACAQ,KAAAY,KAAApB,EAAAoB,KACAZ,KAAAa,KAAArB,EAAAqB,KACAb,KAAApB,KAAAY,EAAAZ,MAEAkB,EApBA,GAsBApC,EAAAoC,+CCzBA,IAAAoB,EAAA/C,EAAA,GACAgD,EAAA,WACA,SAAAA,EAAAC,EAAAC,EAAAC,GACAtB,KAAAuB,IAAA,IACAvB,KAAAwB,WACAxB,KAAAyB,iBAAA,EACAzB,KAAA0B,YACA1B,KAAA2B,SAAA,EACA3B,KAAA4B,aAAA,EACA5B,KAAA6B,YAAA,EACA7B,KAAA8B,WAAA,EACA9B,KAAA+B,UAAA,EACA/B,KAAAgC,SAAA,EACAhC,KAAAiC,SAAA,EACAjC,KAAAkC,WAAA,EACAlC,KAAAoB,WACApB,KAAAqB,OACArB,KAAAsB,UACAtB,KAAAmC,KAAA,IAAAjB,EAAApB,eAAAuB,GACArB,KAAAoC,MAAAf,EACAD,EAAAE,UACAtB,KAAAqC,OAAAjB,EAAAE,QAAAe,QAAA,OACArC,KAAAsC,MAAAlB,EAAAE,QAAAiB,WAAA,QAEAvC,KAAAuB,IAAAH,EAAAE,QAAAC,IAkGA,OAhGAJ,EAAAzB,UAAA8C,OAAA,WACA,IACAxC,KAAAoB,SAAAqB,WAAAzC,MAEA,MAAA0C,GACA1C,KAAAoB,SAAAuB,gBAAA3C,KAAA,SACAA,KAAAoB,SAAAwB,aAAA5C,KAAA,WAGAmB,EAAAzB,UAAAmD,OAAA,WACA7C,KAAAoB,SAAA0B,WAAA9C,OAEAmB,EAAAzB,UAAAqD,OAAA,WACA/C,KAAAoB,SAAA4B,gBAAAhD,OAEAmB,EAAAzB,UAAAuD,eAAA,aAGA9B,EAAAzB,UAAAwD,YAAA,SAAAC,GACA,OAAgBA,SAEhBhC,EAAAzB,UAAA0D,WAAA,SAAAnB,GACA,OAAgBA,aAEhBd,EAAAzB,UAAA2D,UAAA,SAAAC,EAAAC,EAAA/B,GACA,OAAgB8B,WAAAC,SAAA/B,YAEhBL,EAAAzB,UAAA8D,QAAA,SAAAF,EAAAC,EAAA/B,GACA,OAAgB8B,WAAAC,SAAA/B,YAEhBL,EAAAzB,UAAA+D,SAAA,SAAAH,EAAAC,EAAA/B,GACA,OAAgB8B,WAAAC,SAAA/B,YAEhBL,EAAAzB,UAAAgE,WAAA,SAAAJ,EAAAC,EAAA/B,GACA,OAAgB8B,WAAAC,SAAA/B,YAEhBL,EAAAzB,UAAAiE,gBAAA,WACA3D,KAAA2B,SAAA,EACA3B,KAAA4B,aAAA,EACA5B,KAAA6B,YAAA,EACA7B,KAAA8B,WAAA,EACA9B,KAAA+B,UAAA,EACA/B,KAAAgC,SAAA,EACAhC,KAAAiC,SAAA,EACAjC,KAAAiD,kBAEA9B,EAAAzB,UAAAkE,aAAA,SAAAT,GACAnD,KAAAkD,YAAAC,IAEAhC,EAAAzB,UAAAmE,YAAA,SAAA5B,GACAjC,KAAAiC,WACAjC,KAAAoD,WAAAnB,IAEAd,EAAAzB,UAAAoE,WAAA,SAAAR,EAAAC,EAAA/B,GACAxB,KAAA2B,SAAA,EACA3B,KAAA4B,aAAA,EACA5B,KAAA6B,YAAA,EACA7B,KAAA8B,WAAA,EACA9B,KAAA+B,UAAA,EACA/B,KAAAgC,SAAA,EACAhC,KAAAiC,SAAA,IACAjC,KAAAkC,WAAA,EACAlC,KAAAqD,UAAAC,EAAAC,EAAA/B,IAEAL,EAAAzB,UAAAqE,SAAA,SAAAT,EAAAC,EAAA/B,GACAxB,KAAA2B,SAAA,EACA3B,KAAA4B,aAAA,EACA5B,KAAA6B,YAAA,EACA7B,KAAA8B,WAAA,EACA9B,KAAA+B,UAAA,EACA/B,KAAAgC,SAAA,EACAhC,KAAAiC,SAAA,EACAjC,KAAAkC,WAAA,EACAlC,KAAAwD,QAAAF,EAAAC,EAAA/B,IAEAL,EAAAzB,UAAAsE,UAAA,SAAAV,EAAAC,EAAA/B,GACAxB,KAAA2B,SAAA,EACA3B,KAAA4B,aAAA,EACA5B,KAAA6B,YAAA,EACA7B,KAAA8B,WAAA,EACA9B,KAAA+B,UAAA,EACA/B,KAAAgC,SAAA,EACAhC,KAAAiC,SAAA,EACAjC,KAAAkC,WAAA,EACAlC,KAAAyD,SAAAH,EAAAC,EAAA/B,IAEAL,EAAAzB,UAAAuE,YAAA,SAAAX,EAAAC,EAAA/B,GACAxB,KAAA0D,WAAAJ,EAAAC,EAAA/B,GACAxB,KAAAoB,SAAAE,QAAA4C,mBACAlE,KAAA+C,UAGA5B,EAAAzB,UAAAyE,oBAAA,WACAnE,KAAAkC,MAAAlC,KAAAkC,SAAAlC,KAAAoB,SAAAgD,WACApE,KAAA2B,SAAA,GAEAR,EAzHA,GA2HAzD,EAAAyD,yCC5HA,IAAAkD,EAAArE,WAAAqE,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA9F,EAAAD,EAAAgG,UAAAC,OAAAvF,EAAAV,EAAA,EAAA6F,EAAA,OAAAE,IAAA1F,OAAA6F,yBAAAL,EAAAC,GAAAC,EACA,oBAAAI,SAAA,mBAAAA,QAAAC,SAAA1F,EAAAyF,QAAAC,SAAAR,EAAAC,EAAAC,EAAAC,QACA,QAAApG,EAAAiG,EAAAK,OAAA,EAA4CtG,GAAA,EAAQA,KAAAM,EAAA2F,EAAAjG,MAAAe,GAAAV,EAAA,EAAAC,EAAAS,GAAAV,EAAA,EAAAC,EAAA4F,EAAAC,EAAApF,GAAAT,EAAA4F,EAAAC,KAAApF,GACpD,OAAAV,EAAA,GAAAU,GAAAL,OAAAC,eAAAuF,EAAAC,EAAApF,MAEA2F,EAAA5G,EAAA,GACA6G,EAAA,WACA,SAAAA,EAAAC,GACAjF,KAAAkF,SAAA,IAAAH,EAAAI,aACAnF,KAAAoF,WAAA,IAAAL,EAAAI,aACAnF,KAAAiF,UA2DA,OAzDAD,EAAAtF,UAAA2F,WAAA,WACA,OAAArF,KAAAoB,SAAAE,SAEA0D,EAAAtF,UAAA4F,WAAA,WACA,UAEAN,EAAAtF,UAAA6F,OAAA,SAAAC,GACA,IAAAC,EAAAzF,KAAA0F,aAAAF,GACA,GAAAC,EAAA,CAGA,IAAAnE,EAAAtB,KAAAqF,aACAM,EAAA3F,KAAAsF,aACAtF,KAAA4F,gBAAAJ,GACAxF,KAAAoB,SAAAyE,WAAAJ,EAAAK,MAAAxE,EAAAqE,GACA3F,KAAAkF,SAAAa,MAAA,GACA/F,KAAAoF,WAAAW,KAAAN,EAAAK,SAEAd,EAAAtF,UAAAsG,WAAA,SAAAR,GACA,IAAAC,EAAAzF,KAAA0F,aAAAF,GACAxF,KAAAiG,WAAAR,EAAAS,SAGAT,EAAAU,WAAA,OACAnG,KAAA4F,gBAAAJ,GACAxF,KAAAkF,SAAAa,MAAA,KAEAf,EAAAtF,UAAA0G,YAAA,SAAAZ,GACAxF,KAAAiF,SACAO,EAAAa,gBAAArG,KAAAiF,QAAA,KAIAjF,KAAA4F,gBAAAJ,GACAxF,KAAAkF,SAAAa,MAAA,KAEAf,EAAAtF,UAAAgG,aAAA,SAAAF,GACA,OAAAA,EAAAc,aAAAd,EAAAc,aAAAd,EAAAe,cAAAD,cAEAtB,EAAAtF,UAAAkG,gBAAA,SAAAJ,GACAA,EAAAgB,iBACAhB,EAAAiB,mBAEAzB,EAAAtF,UAAAuG,WAAA,SAAAC,GACA,QAAAA,IAGAA,EAAAQ,SACA,IAAAR,EAAAQ,QAAA,WAEAR,EAAAS,UACAT,EAAAS,SAAA,WAMA3B,EA/DA,GAiEAX,GACAU,EAAA6B,SACA5B,EAAAtF,UAAA,mBACA2E,GACAU,EAAA8B,UACA7B,EAAAtF,UAAA,mBACA2E,GACAU,EAAA8B,UACA7B,EAAAtF,UAAA,qBACA2E,GACAU,EAAA+B,aAAA,oBACA9B,EAAAtF,UAAA,eACA2E,GACAU,EAAA+B,aAAA,wBACA9B,EAAAtF,UAAA,mBACA2E,GACAU,EAAA+B,aAAA,yBACA9B,EAAAtF,UAAA,oBACAsF,EAAAX,GACAU,EAAAgC,WAAsBC,SAAA,mBACtBhC,GACAtH,EAAAsH,kDC7FA,IAAAX,EAAArE,WAAAqE,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA9F,EAAAD,EAAAgG,UAAAC,OAAAvF,EAAAV,EAAA,EAAA6F,EAAA,OAAAE,IAAA1F,OAAA6F,yBAAAL,EAAAC,GAAAC,EACA,oBAAAI,SAAA,mBAAAA,QAAAC,SAAA1F,EAAAyF,QAAAC,SAAAR,EAAAC,EAAAC,EAAAC,QACA,QAAApG,EAAAiG,EAAAK,OAAA,EAA4CtG,GAAA,EAAQA,KAAAM,EAAA2F,EAAAjG,MAAAe,GAAAV,EAAA,EAAAC,EAAAS,GAAAV,EAAA,EAAAC,EAAA4F,EAAAC,EAAApF,GAAAT,EAAA4F,EAAAC,KAAApF,GACpD,OAAAV,EAAA,GAAAU,GAAAL,OAAAC,eAAAuF,EAAAC,EAAApF,MAEA2F,EAAA5G,EAAA,GACA8I,EAAA,WACA,SAAAA,EAAAhC,GACAjF,KAAAkH,eAAA,IAAAnC,EAAAI,aACAnF,KAAAiF,UAqBA,OAnBAgC,EAAAvH,UAAA2F,WAAA,WACA,OAAArF,KAAAoB,SAAAE,SAEA2F,EAAAvH,UAAA4F,WAAA,WACA,UAEA2B,EAAAvH,UAAAyH,sBAAA,WACA,QAAAnH,KAAAiF,QAAAmC,cAAAC,WAAAC,UAEAL,EAAAvH,UAAA6H,SAAA,WACA,IAAAzB,EAAA9F,KAAAiF,QAAAmC,cAAAtB,MACAxE,EAAAtB,KAAAqF,aACAM,EAAA3F,KAAAsF,aACAtF,KAAAoB,SAAAyE,WAAAC,EAAAxE,EAAAqE,GACA3F,KAAAkH,eAAAnB,KAAAD,GACA9F,KAAAmH,0BACAnH,KAAAiF,QAAAmC,cAAA/H,MAAA,KAGA4H,EAxBA,GA0BA5C,GACAU,EAAA6B,SACAK,EAAAvH,UAAA,mBACA2E,GACAU,EAAA8B,UACAI,EAAAvH,UAAA,yBACA2E,GACAU,EAAA+B,aAAA,WACAG,EAAAvH,UAAA,iBACAuH,EAAA5C,GACAU,EAAAgC,WAAsBC,SAAA,qBACtBC,GACAvJ,EAAAuJ,qCC9CAtJ,EAAAD,QAAAO,gCCCA,IAAAoG,EAAArE,WAAAqE,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA9F,EAAAD,EAAAgG,UAAAC,OAAAvF,EAAAV,EAAA,EAAA6F,EAAA,OAAAE,IAAA1F,OAAA6F,yBAAAL,EAAAC,GAAAC,EACA,oBAAAI,SAAA,mBAAAA,QAAAC,SAAA1F,EAAAyF,QAAAC,SAAAR,EAAAC,EAAAC,EAAAC,QACA,QAAApG,EAAAiG,EAAAK,OAAA,EAA4CtG,GAAA,EAAQA,KAAAM,EAAA2F,EAAAjG,MAAAe,GAAAV,EAAA,EAAAC,EAAAS,GAAAV,EAAA,EAAAC,EAAA4F,EAAAC,EAAApF,GAAAT,EAAA4F,EAAAC,KAAApF,GACpD,OAAAV,EAAA,GAAAU,GAAAL,OAAAC,eAAAuF,EAAAC,EAAApF,MAEAoI,EAAArJ,EAAA,GACA4G,EAAA5G,EAAA,GACAsJ,EAAAtJ,EAAA,GACAuJ,EAAAvJ,EAAA,GACAwJ,EAAA,WAGA,OAFA,aADA,GAKAA,EAAAtD,GACAU,EAAA6C,UACAC,SAAAL,EAAAM,cACAC,cAAAN,EAAAzC,kBAAA0C,EAAAT,qBACAvJ,SAAA+J,EAAAzC,kBAAA0C,EAAAT,wBAEAU,GACAjK,EAAAiK,iDCtBA,IAAAK,EAAA,WACA,SAAAA,KA6GA,OA3GAA,EAAAC,aAAA,SAAA9F,GACA,IAAA+F,EAAA,cA+BA,OA9BA,IAAAlI,KAAAmI,SAAAzB,QAAAvE,EAAAtB,MACAqH,EAAA,QAEA/F,EAAAtB,KAAAuH,MAAA,WACAF,EAAA,QAEA/F,EAAAtB,KAAAuH,MAAA,WACAF,EAAA,QAEA/F,EAAAtB,KAAAuH,MAAA,WACAF,EAAA,QAEA,oBAAA/F,EAAAtB,KACAqH,EAAA,OAEA,IAAAlI,KAAAqI,cAAA3B,QAAAvE,EAAAtB,MACAqH,EAAA,YAEA,IAAAlI,KAAAsI,SAAA5B,QAAAvE,EAAAtB,MACAqH,EAAA,OAEA,IAAAlI,KAAAuI,SAAA7B,QAAAvE,EAAAtB,MACAqH,EAAA,OAEA,IAAAlI,KAAAwI,SAAA9B,QAAAvE,EAAAtB,QACAqH,EAAA,OAEA,gBAAAA,IACAA,EAAAlI,KAAAyI,kBAAAtG,EAAAvD,OAEAsJ,GAEAF,EAAAS,kBAAA,SAAAC,GACA,IAAAxC,GACAyC,IAAA,QACAC,KAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,KAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,GAAA,QACAC,KAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,MAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,SAAA,WACAC,IAAA,WACAC,IAAA,WACAC,KAAA,WACAC,GAAA,WACAC,IAAA,WACAC,IAAA,WACAC,GAAA,WACAC,IAAA,MACAC,IAAA,MACAC,KAAA,MACAC,IAAA,MACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,IAAA,QACAC,MAAA,QACAC,IAAA,QACAC,IAAA,QACAC,KAAA,QACAC,KAAA,QACAC,IAAA,QACAC,IAAA,MACAC,KAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,IAAA,MACAC,KAAA,MACAC,IAAA,MACAC,KAAA,MACAC,IAAA,OAEAC,EAAA3D,EAAA4D,MAAA,KACA,GAAAD,EAAA1H,OAAA,EACA,oBAEA,IAAA4H,EAAAF,IAAA1H,OAAA,GAAA3D,cACA,YAAAwL,IAAAtG,EAAAqG,GACA,cAGArG,EAAAqG,IAGAvE,EA9GA,GAiHAA,EAAAM,UACA,qBACA,qBACA,0EACA,0EACA,mDACA,oDAEAN,EAAAO,UACA,2BACA,2BACA,2BACA,oEACA,uEACA,iDACA,oDACA,iDACA,yDAEAP,EAAAQ,UACA,gCACA,gCACA,gCACA,gCACA,4EACA,wEACA,yEACA,sDACA,6DACA,6DACA,2DAGAR,EAAAG,UACA,kBACA,oBACA,YACA,wBACA,kBACA,kCAGAH,EAAAK,eACA,qBACA,0BACA,uBACA,oBACA,+BACA,2BACA,+BACA,6BACA,8BACA,mBACA,uBAEA3K,EAAAsK,yCCxKA,IAAAjD,EAAA5G,EAAA,GACA+C,EAAA/C,EAAA,GACAsO,EAAAtO,EAAA,GACAuO,EAAAvO,EAAA,GAIA,IAAAwO,EAAA,WACA,SAAAA,EAAArL,GACAtB,KAAA4B,aAAA,EACA5B,KAAA4M,SACA5M,KAAAiC,SAAA,EACAjC,KAAAoE,WAAA,EACApE,KAAAsB,SACAuL,YAAA,EACAC,SAAA,EACAnH,WACAzB,mBAAA,EACA6I,kBAAA,EACAC,mBAAA,SAAAC,GAAiD,OAAAA,EAAA7K,OACjD8K,2BAAA,GAEAlN,KAAAmN,WAAA7L,GACAtB,KAAAsD,SAAA,IAAAyB,EAAAI,aAyXA,OAvXAwH,EAAAjN,UAAAyN,WAAA,SAAA7L,GACAtB,KAAAsB,QAAAvC,OAAAqO,OAAApN,KAAAsB,WACAtB,KAAAqN,UAAArN,KAAAsB,QAAA+L,UACArN,KAAAsN,gBAAAtN,KAAAsB,QAAAgM,iBAAA,gBACAtN,KAAA6M,WAAA7M,KAAAsB,QAAAuL,WACA7M,KAAAsB,QAAAqE,QAAA4H,SAAsC3O,KAAA,aAAA4O,GAAAxN,KAAAyN,oBACtCzN,KAAAsB,QAAAoM,aACA1N,KAAAsB,QAAAqE,QAAA4H,SAA0C3O,KAAA,WAAA4O,GAAAxN,KAAA2N,kBAE1C3N,KAAAsB,QAAAsM,iBACA5N,KAAAsB,QAAAqE,QAAA4H,SAA0C3O,KAAA,WAAA4O,GAAAxN,KAAA6N,kBAE1C7N,KAAAsB,QAAAwM,iBACA9N,KAAAsB,QAAAqE,QAAA4H,SAA0C3O,KAAA,WAAA4O,GAAAxN,KAAA+N,kBAE1C,QAAA1P,EAAA,EAAuBA,EAAA2B,KAAA4M,MAAAjI,OAAuBtG,IAC9C2B,KAAA4M,MAAAvO,GAAAkD,IAAAvB,KAAAsB,QAAAC,KAGAoL,EAAAjN,UAAAmG,WAAA,SAAAC,EAAAxE,EAAAqE,GAGA,IAFA,IAAAqI,EAAAhO,KACAiO,KACAC,EAAA,EAAAC,EAAArI,EAAyCoI,EAAAC,EAAAxJ,OAAqBuJ,IAAA,CAC9D,IAAA/L,EAAAgM,EAAAD,GACAD,EAAAG,KAAAjM,GAEA,IAAAkM,EAAArO,KAAAsO,YAAA3I,GACA4I,EAAAvO,KAAA4M,MAAAjI,OACA6J,KACAP,EAAAQ,IAAA,SAAApN,GACAC,IACAA,EAAA0M,EAAA1M,SAEA,IAAAoN,EAAA,IAAAxN,EAAApB,eAAAuB,GACA,GAAA2M,EAAAW,aAAAD,EAAAL,EAAA/M,GAAA,CACA,IAAAsN,EAAA,IAAAnC,EAAAtL,SAAA6M,EAAA3M,EAAAC,GACAkN,EAAAJ,KAAAQ,GACAZ,EAAApB,MAAAwB,KAAAQ,GACAZ,EAAAa,mBAAAD,OAEA,CACA,IAAAE,EAAAT,EAAAL,EAAAe,kBACAf,EAAAgB,wBAAAN,EAAAI,EAAAxN,MAGAtB,KAAA4M,MAAAjI,SAAA4J,IACAvO,KAAAiP,kBAAAT,GACAxO,KAAAiC,SAAAjC,KAAAkP,qBAEAlP,KAAAmP,UACAnP,KAAAsB,QAAAuL,YACA7M,KAAAoP,aAGAzC,EAAAjN,UAAAsD,gBAAA,SAAA3D,GACA,IAAA6C,EAAAlC,KAAAqP,eAAAhQ,GACA4N,EAAAjN,KAAA4M,MAAA1K,GACA+K,EAAArL,aACAqL,EAAApK,SAEA7C,KAAA4M,MAAA0C,OAAApN,EAAA,GACAlC,KAAAiC,SAAAjC,KAAAkP,qBAEAvC,EAAAjN,UAAA6P,WAAA,WACA,KAAAvP,KAAA4M,MAAAjI,QACA3E,KAAA4M,MAAA,GAAA7J,SAEA/C,KAAAiC,SAAA,GAEA0K,EAAAjN,UAAA+C,WAAA,SAAApD,GACA,IAAA6C,EAAAlC,KAAAqP,eAAAhQ,GACA4N,EAAAjN,KAAA4M,MAAA1K,GACAsN,EAAAxP,KAAAsB,QAAAwL,QAAA,mCACAG,EAAA9I,sBACAnE,KAAA4B,cAGA5B,KAAA4B,aAAA,EACA5B,KAAAwP,GAAAvC,KAEAN,EAAAjN,UAAAoD,WAAA,SAAAzD,GACA,IAAA6C,EAAAlC,KAAAqP,eAAAhQ,GACA4N,EAAAjN,KAAA4M,MAAA1K,GACA7B,EAAAL,KAAAsB,QAAAwL,QAAAG,EAAAwC,KAAAxC,EAAAyC,MACAzC,KAAArL,aACAvB,EAAAsP,SAGAhD,EAAAjN,UAAA0P,UAAA,WACA,IAAAQ,EAAA5P,KAAA6P,sBAAAf,OAAA,SAAA7B,GAAuE,OAAAA,EAAArL,cACvEgO,EAAAjL,SAGAiL,EAAAnB,IAAA,SAAAxB,GAAmC,OAAAA,EAAA9I,wBACnCyL,EAAA,GAAApN,WAEAmK,EAAAjN,UAAAoQ,UAAA,WACA9P,KAAA6P,sBACApB,IAAA,SAAAxB,GAAmC,OAAAA,EAAApK,YAEnC8J,EAAAjN,UAAAqQ,OAAA,SAAA1Q,GACA,OA1HA,SAAAA,GACA,OAAA2Q,MAAA3Q,aAAA2Q,KAyHAD,CAAA1Q,IAEAsN,EAAAjN,UAAAuQ,iBAAA,SAAA5Q,GACA,OAAAA,aAAA6B,EAAApB,gBAEA6M,EAAAjN,UAAA2P,eAAA,SAAAhQ,GACA,uBAAAA,IAAAW,KAAA4M,MAAAlG,QAAArH,IAEAsN,EAAAjN,UAAAmQ,oBAAA,WACA,OAAA7P,KAAA4M,MAAAkC,OAAA,SAAA7B,GAAkD,OAAAA,EAAApL,cAElD8K,EAAAjN,UAAAwQ,cAAA,WACA,OAAAlQ,KAAA4M,MACAkC,OAAA,SAAA7B,GAAqC,OAAAA,EAAAtL,UAAAsL,EAAArL,cACrCuO,KAAA,SAAAC,EAAAC,GAA2C,OAAAD,EAAAlO,MAAAmO,EAAAnO,SAE3CyK,EAAAjN,UAAA4Q,QAAA,aAGA3D,EAAAjN,UAAA6Q,iBAAA,SAAAC,GACA,OAAgBA,cAEhB7D,EAAAjN,UAAA+Q,gBAAA,SAAA7B,EAAAzL,GACA,OAAgByL,WAAAzL,SAEhBwJ,EAAAjN,UAAAgR,kBAAA,SAAA9B,GACA,OAAgBA,aAEhBjC,EAAAjN,UAAAiR,uBAAA,SAAA1D,EAAA6B,EAAAxN,GACA,OAAgB2L,OAAA6B,SAAAxN,YAEhBqL,EAAAjN,UAAAkR,mBAAA,SAAAhC,GACA,OAAgBA,aAEhBjC,EAAAjN,UAAAmR,eAAA,SAAAjC,EAAA3M,GACA,OAAgB2M,WAAA3M,aAEhB0K,EAAAjN,UAAAoR,cAAA,SAAA7O,GACA,OAAgBA,aAEhB0K,EAAAjN,UAAAqR,cAAA,SAAA9D,EAAA3J,EAAAC,EAAA/B,GACA,OAAgByL,OAAA3J,WAAAC,SAAA/B,YAEhBmL,EAAAjN,UAAAsR,YAAA,SAAA/D,EAAA3J,EAAAC,EAAA/B,GACA,OAAgByL,OAAA3J,WAAAC,SAAA/B,YAEhBmL,EAAAjN,UAAAuR,aAAA,SAAAhE,EAAA3J,EAAAC,EAAA/B,GACA,OAAgByL,OAAA3J,WAAAC,SAAA/B,YAEhBmL,EAAAjN,UAAAwR,eAAA,SAAAjE,EAAA3J,EAAAC,EAAA/B,GACA,OAAgByL,OAAA3J,WAAAC,SAAA/B,YAEhBmL,EAAAjN,UAAAyR,cAAA,aAGAxE,EAAAjN,UAAAqO,gBAAA,SAAAd,GACA,QAAAjN,KAAAsB,QAAAwM,kBAAA,IAAA9N,KAAAsB,QAAAwM,gBAAApH,QAAAuG,EAAApM,QAEA8L,EAAAjN,UAAAiO,gBAAA,SAAAV,GACA,QAAAjN,KAAAsB,QAAAoM,aAAAT,EAAArM,KAAAZ,KAAAsB,QAAAoM,cAEAf,EAAAjN,UAAAmO,gBAAA,SAAAZ,GACA,QAAAjN,KAAAsB,QAAAsM,kBACA,IAAA5N,KAAAsB,QAAAsM,gBAAAlH,QAAAgG,EAAA1E,SAAAC,aAAAgF,MAEAN,EAAAjN,UAAAkD,aAAA,SAAAqK,EAAA3J,EAAAC,EAAA/B,GACAyL,EAAAlJ,SAAAT,EAAAC,EAAA/B,GACAxB,KAAAgR,YAAA/D,EAAA3J,EAAAC,EAAA/B,IAEAmL,EAAAjN,UAAAiD,gBAAA,SAAAsK,EAAA3J,EAAAC,EAAA/B,GACAyL,EAAAhJ,YAAAX,EAAAC,EAAA/B,GACAxB,KAAAkR,eAAAjE,EAAA3J,EAAAC,EAAA/B,GACA,IAAA4P,EAAApR,KAAAkQ,gBAAA,GACAlQ,KAAA4B,aAAA,EACAwP,EACAA,EAAA5O,UAGAxC,KAAAmR,gBACAnR,KAAAiC,SAAAjC,KAAAkP,oBACAlP,KAAAmP,YAEAxC,EAAAjN,UAAA2R,eAAA,SAAAC,GACA,gBAAA1S,GACA,OAAAA,EACA0S,EAAA1S,EAAAoC,qBAAA,EAEAsQ,IAGA3E,EAAAjN,UAAA6R,cAAA,SAAAtE,GACA,IAGAuE,EAHAxD,EAAAhO,KACAyR,EAAAzR,KACA0R,EAAAzE,EAAAwC,KAAA,IAAAkC,eAGA,GADA3R,KAAA4R,oBAAA3E,GACA,iBAAAA,EAAA7K,MAAAxB,KACA,UAAAiR,UAAA,yCAEA,GAAA7R,KAAAsB,QAAAyL,iBAuBAyE,EAAAxR,KAAAsB,QAAA0L,mBAAAC,OAvBA,CACAuE,EAAA,IAAAM,SACA9R,KAAA+R,iBAAA9E,EAAAuE,GACA,IAAAQ,EAAA,WAA0C,OAAAR,EAAAS,OAAAhF,EAAA3K,MAAA2K,EAAA7K,MAAA6K,EAAA9K,KAAAvD,OAC1CoB,KAAAsB,QAAA4Q,uBACAF,SAGAxF,IAAAxM,KAAAsB,QAAA6Q,qBACApT,OAAAqT,KAAApS,KAAAsB,QAAA6Q,qBAAAE,QAAA,SAAA7N,GACA,IAAA8N,EAAAtE,EAAA1M,QAAA6Q,oBAAA3N,GAEA,iBAAA8N,KAAA5L,QAAA,kBAAuF,IACvF4L,IAAAC,QAAA,gBAAkEtF,EAAA9K,KAAAvD,OAElE4S,EAAAS,OAAAzN,EAAA8N,KAGAtS,KAAAsB,QAAA4Q,uBACAF,IAgCA,GA1BAN,EAAAlP,OAAAgQ,WAAA,SAAAhN,GACA,IAAAvD,EAAAwQ,KAAAC,MAAAlN,EAAAmN,iBAAA,IAAAnN,EAAAoN,OAAApN,EAAAqN,MAAA,GACA7E,EAAA8E,gBAAA7F,EAAAhL,IAEAyP,EAAAqB,OAAA,WACA,IAAAvR,EAAAwM,EAAAgF,cAAAtB,EAAAuB,yBACA3P,EAAA0K,EAAAkF,mBAAAxB,EAAApO,SAAA9B,GACA2R,EAAAnF,EAAAoF,eAAA1B,EAAAnO,QAAA,kBAEAyK,EADA,MAAAmF,EAAA,QACAlG,EAAA3J,EAAAoO,EAAAnO,OAAA/B,GACAwM,EAAArL,gBAAAsK,EAAA3J,EAAAoO,EAAAnO,OAAA/B,IAEAkQ,EAAA2B,QAAA,WACA,IAAA7R,EAAAwM,EAAAgF,cAAAtB,EAAAuB,yBACA3P,EAAA0K,EAAAkF,mBAAAxB,EAAApO,SAAA9B,GACAwM,EAAApL,aAAAqK,EAAA3J,EAAAoO,EAAAnO,OAAA/B,GACAwM,EAAArL,gBAAAsK,EAAA3J,EAAAoO,EAAAnO,OAAA/B,IAEAkQ,EAAA4B,QAAA,WACA,IAAA9R,EAAAwM,EAAAgF,cAAAtB,EAAAuB,yBACA3P,EAAA0K,EAAAkF,mBAAAxB,EAAApO,SAAA9B,GACAwM,EAAAuF,cAAAtG,EAAA3J,EAAAoO,EAAAnO,OAAA/B,GACAwM,EAAArL,gBAAAsK,EAAA3J,EAAAoO,EAAAnO,OAAA/B,IAEAkQ,EAAA8B,KAAAvG,EAAA5K,OAAA4K,EAAA1L,KAAA,GACAmQ,EAAAjQ,gBAAAwL,EAAAxL,gBACAzB,KAAAsB,QAAAE,QACA,QAAA0M,EAAA,EAAAuF,EAAAzT,KAAAsB,QAAAE,QAAuD0M,EAAAuF,EAAA9O,OAAgBuJ,IAAA,CACvE,IAAAwF,EAAAD,EAAAvF,GACAwD,EAAAiC,iBAAAD,EAAA9U,KAAA8U,EAAArU,OAGA,GAAA4N,EAAAzL,QAAAmD,OACA,QAAAiP,EAAA,EAAAC,EAAA5G,EAAAzL,QAA+CoS,EAAAC,EAAAlP,OAAgBiP,IAAA,CAC/DF,EAAAG,EAAAD,GACAlC,EAAAiC,iBAAAD,EAAA9U,KAAA8U,EAAArU,OAGAW,KAAAqN,WACAqE,EAAAiC,iBAAA3T,KAAAsN,gBAAAtN,KAAAqN,WAEAqE,EAAAoC,mBAAA,WACApC,EAAAqC,YAAApC,eAAAqC,MACAvC,EAAAnO,SAAAyC,KAAA2L,EAAAuC,eAGAjU,KAAAsB,QAAA4L,0BACAsE,EAAA0C,KAAA,SAAAC,GAA6C,OAAAzC,EAAA0C,KAAAC,KAAAC,UAAAH,MAG7CzC,EAAA0C,KAAA5C,GAEAxR,KAAAmP,WAEAxC,EAAAjN,UAAAwP,kBAAA,SAAA7P,GAEA,QADA,IAAAA,IAA+BA,EAAA,GAC/BW,KAAAsB,QAAA4C,kBACA,OAAA7E,EAEA,IAAAkV,EAAAvU,KAAA6P,sBAAAlL,OACA6P,EAAAD,EAAAvU,KAAA4M,MAAAjI,OAAA4P,EAAAvU,KAAA4M,MAAAjI,OACA8P,EAAA,IAAAzU,KAAA4M,MAAAjI,OACA+P,EAAArV,EAAAoV,EAAA,IACA,OAAAhC,KAAAC,MAAA8B,EAAAC,EAAAC,IAEA/H,EAAAjN,UAAA4O,YAAA,SAAA3I,GACA,IAAAA,EACA,OAAA3F,KAAAsB,QAAAqE,QAEA,GAAAgP,MAAAC,QAAAjP,GACA,OAAAA,EAEA,oBAAAA,EAAA,CACA,IAAAkP,EAAAlP,EAAAyC,MAAA,YACA,OAAApI,KAAAsB,QAAAqE,QACAmJ,OAAA,SAAAA,GAA2C,WAAA+F,EAAAnO,QAAAoI,EAAAlQ,QAE3C,OAAAoB,KAAAsB,QAAAqE,SAEAgH,EAAAjN,UAAAyP,QAAA,aAGAxC,EAAAjN,UAAA+N,kBAAA,WACA,YAAAjB,IAAAxM,KAAAsB,QAAAwT,YAAA9U,KAAA4M,MAAAjI,OAAA3E,KAAAsB,QAAAwT,YAEAnI,EAAAjN,UAAAiP,aAAA,SAAAxM,EAAAwD,EAAArE,GACA,IAAA0M,EAAAhO,KAEA,OADAA,KAAA+O,kBAAA,GACApJ,EAAAhB,QAAAgB,EAAAoP,MAAA,SAAAjG,GAEA,OADAd,EAAAe,mBACAD,EAAAtB,GAAAhP,KAAAwP,EAAA7L,EAAAb,MAGAqL,EAAAjN,UAAA0T,eAAA,SAAA7P,GACA,OAAAA,GAAA,KAAAA,EAAA,WAAAA,GAEAoJ,EAAAjN,UAAAwT,mBAAA,SAAA5P,EAAA9B,GACA,OAAA8B,GAEAqJ,EAAAjN,UAAAsT,cAAA,SAAAxR,GACA,IACAgD,EACAwQ,EACA3W,EAHA4W,KAIA,OAAAzT,GAGAA,EAAA8K,MAAA,MAAAmC,IAAA,SAAAyG,GACA7W,EAAA6W,EAAAxO,QAAA,KACAlC,EAAA0Q,EAAApU,MAAA,EAAAzC,GAAA8W,OAAAnU,cACAgU,EAAAE,EAAApU,MAAAzC,EAAA,GAAA8W,OACA3Q,IACAyQ,EAAAzQ,GAAAyQ,EAAAzQ,GAAAyQ,EAAAzQ,GAAA,KAAAwQ,OAGAC,GAVAA,GAYAtI,EAAAjN,UAAAsP,wBAAA,SAAA/B,EAAA6B,EAAAxN,GACAtB,KAAA2Q,uBAAA1D,EAAA6B,EAAAxN,IAEAqL,EAAAjN,UAAAmP,mBAAA,SAAA5B,GACAjN,KAAA0Q,kBAAAzD,IAEAN,EAAAjN,UAAAuP,kBAAA,SAAAW,GACA5P,KAAAuQ,iBAAAX,IAEAjD,EAAAjN,UAAAkS,oBAAA,SAAA3E,GACAA,EAAAtJ,kBACA3D,KAAA4Q,mBAAA3D,IAEAN,EAAAjN,UAAAqS,iBAAA,SAAA9E,EAAA9J,GACA8J,EAAArJ,aAAAT,GACAnD,KAAAyQ,gBAAAxD,EAAA9J,IAEAwJ,EAAAjN,UAAAoT,gBAAA,SAAA7F,EAAAhL,GACA,IAAA4Q,EAAA7S,KAAAkP,kBAAAjN,GACAjC,KAAAiC,SAAA4Q,EACA5F,EAAApJ,YAAA5B,GACAjC,KAAA6Q,eAAA5D,EAAAhL,GACAjC,KAAA8Q,cAAA+B,GACA7S,KAAAmP,WAEAxC,EAAAjN,UAAA0V,eAAA,SAAAnI,EAAA3J,EAAAC,EAAA/B,GACAyL,EAAAnJ,WAAAR,EAAAC,EAAA/B,GACAxB,KAAA+Q,cAAA9D,EAAA3J,EAAAC,EAAA/B,IAEAmL,EAAAjN,UAAA6T,cAAA,SAAAtG,EAAA3J,EAAAC,EAAA/B,GACAyL,EAAAjJ,UAAAV,EAAAC,EAAA/B,GACAxB,KAAAiR,aAAAhE,EAAA3J,EAAAC,EAAA/B,IAEAmL,EAzYA,GA2YAjP,EAAAiP,6CClZA,SAAA0I,EAAA5W,GACA,QAAAmB,KAAAnB,EAAAf,EAAAiC,eAAAC,KAAAlC,EAAAkC,GAAAnB,EAAAmB,IAEAyV,EAAAlX,EAAA,IACAkX,EAAAlX,EAAA,IACAkX,EAAAlX,EAAA,IACAkX,EAAAlX,EAAA,IACAkX,EAAAlX,EAAA,IACA,IAAAmX,EAAAnX,EAAA,GACAT,EAAAiK,iBAAA2N,EAAA3N","file":"ng2-file-upload.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-file-upload.umd.min\"] = factory(require(\"@angular/core\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ng2-file-upload.umd.min\"] = factory(root[\"@angular/core\"], root[\"@angular/common\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__5__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","\"use strict\";\r\nfunction isElement(node) {\r\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\r\n}\r\nvar FileLikeObject = (function () {\r\n    function FileLikeObject(fileOrInput) {\r\n        this.rawFile = fileOrInput;\r\n        var isInput = isElement(fileOrInput);\r\n        var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\r\n        var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\r\n        var method = '_createFrom' + postfix;\r\n        this[method](fakePathOrObject);\r\n    }\r\n    FileLikeObject.prototype._createFromFakePath = function (path) {\r\n        this.lastModifiedDate = void 0;\r\n        this.size = void 0;\r\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\r\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\r\n    };\r\n    FileLikeObject.prototype._createFromObject = function (object) {\r\n        this.size = object.size;\r\n        this.type = object.type;\r\n        this.name = object.name;\r\n    };\r\n    return FileLikeObject;\r\n}());\r\nexports.FileLikeObject = FileLikeObject;\r\n","\"use strict\";\r\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\r\nvar FileItem = (function () {\r\n    function FileItem(uploader, some, options) {\r\n        this.url = '/';\r\n        this.headers = [];\r\n        this.withCredentials = true;\r\n        this.formData = [];\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = false;\r\n        this.isSuccess = false;\r\n        this.isCancel = false;\r\n        this.isError = false;\r\n        this.progress = 0;\r\n        this.index = void 0;\r\n        this.uploader = uploader;\r\n        this.some = some;\r\n        this.options = options;\r\n        this.file = new file_like_object_class_1.FileLikeObject(some);\r\n        this._file = some;\r\n        if (uploader.options) {\r\n            this.method = uploader.options.method || 'POST';\r\n            this.alias = uploader.options.itemAlias || 'file';\r\n        }\r\n        this.url = uploader.options.url;\r\n    }\r\n    FileItem.prototype.upload = function () {\r\n        try {\r\n            this.uploader.uploadItem(this);\r\n        }\r\n        catch (e) {\r\n            this.uploader._onCompleteItem(this, '', 0, {});\r\n            this.uploader._onErrorItem(this, '', 0, {});\r\n        }\r\n    };\r\n    FileItem.prototype.cancel = function () {\r\n        this.uploader.cancelItem(this);\r\n    };\r\n    FileItem.prototype.remove = function () {\r\n        this.uploader.removeFromQueue(this);\r\n    };\r\n    FileItem.prototype.onBeforeUpload = function () {\r\n        return void 0;\r\n    };\r\n    FileItem.prototype.onBuildForm = function (form) {\r\n        return { form: form };\r\n    };\r\n    FileItem.prototype.onProgress = function (progress) {\r\n        return { progress: progress };\r\n    };\r\n    FileItem.prototype.onSuccess = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onError = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onCancel = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype.onComplete = function (response, status, headers) {\r\n        return { response: response, status: status, headers: headers };\r\n    };\r\n    FileItem.prototype._onBeforeUpload = function () {\r\n        this.isReady = true;\r\n        this.isUploading = true;\r\n        this.isUploaded = false;\r\n        this.isSuccess = false;\r\n        this.isCancel = false;\r\n        this.isError = false;\r\n        this.progress = 0;\r\n        this.onBeforeUpload();\r\n    };\r\n    FileItem.prototype._onBuildForm = function (form) {\r\n        this.onBuildForm(form);\r\n    };\r\n    FileItem.prototype._onProgress = function (progress) {\r\n        this.progress = progress;\r\n        this.onProgress(progress);\r\n    };\r\n    FileItem.prototype._onSuccess = function (response, status, headers) {\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = true;\r\n        this.isSuccess = true;\r\n        this.isCancel = false;\r\n        this.isError = false;\r\n        this.progress = 100;\r\n        this.index = void 0;\r\n        this.onSuccess(response, status, headers);\r\n    };\r\n    FileItem.prototype._onError = function (response, status, headers) {\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = true;\r\n        this.isSuccess = false;\r\n        this.isCancel = false;\r\n        this.isError = true;\r\n        this.progress = 0;\r\n        this.index = void 0;\r\n        this.onError(response, status, headers);\r\n    };\r\n    FileItem.prototype._onCancel = function (response, status, headers) {\r\n        this.isReady = false;\r\n        this.isUploading = false;\r\n        this.isUploaded = false;\r\n        this.isSuccess = false;\r\n        this.isCancel = true;\r\n        this.isError = false;\r\n        this.progress = 0;\r\n        this.index = void 0;\r\n        this.onCancel(response, status, headers);\r\n    };\r\n    FileItem.prototype._onComplete = function (response, status, headers) {\r\n        this.onComplete(response, status, headers);\r\n        if (this.uploader.options.removeAfterUpload) {\r\n            this.remove();\r\n        }\r\n    };\r\n    FileItem.prototype._prepareToUploading = function () {\r\n        this.index = this.index || ++this.uploader._nextIndex;\r\n        this.isReady = true;\r\n    };\r\n    return FileItem;\r\n}());\r\nexports.FileItem = FileItem;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar core_1 = require(\"@angular/core\");\r\nvar FileDropDirective = (function () {\r\n    function FileDropDirective(element) {\r\n        this.fileOver = new core_1.EventEmitter();\r\n        this.onFileDrop = new core_1.EventEmitter();\r\n        this.element = element;\r\n    }\r\n    FileDropDirective.prototype.getOptions = function () {\r\n        return this.uploader.options;\r\n    };\r\n    FileDropDirective.prototype.getFilters = function () {\r\n        return {};\r\n    };\r\n    FileDropDirective.prototype.onDrop = function (event) {\r\n        var transfer = this._getTransfer(event);\r\n        if (!transfer) {\r\n            return;\r\n        }\r\n        var options = this.getOptions();\r\n        var filters = this.getFilters();\r\n        this._preventAndStop(event);\r\n        this.uploader.addToQueue(transfer.files, options, filters);\r\n        this.fileOver.emit(false);\r\n        this.onFileDrop.emit(transfer.files);\r\n    };\r\n    FileDropDirective.prototype.onDragOver = function (event) {\r\n        var transfer = this._getTransfer(event);\r\n        if (!this._haveFiles(transfer.types)) {\r\n            return;\r\n        }\r\n        transfer.dropEffect = 'copy';\r\n        this._preventAndStop(event);\r\n        this.fileOver.emit(true);\r\n    };\r\n    FileDropDirective.prototype.onDragLeave = function (event) {\r\n        if (this.element) {\r\n            if (event.currentTarget === this.element[0]) {\r\n                return;\r\n            }\r\n        }\r\n        this._preventAndStop(event);\r\n        this.fileOver.emit(false);\r\n    };\r\n    FileDropDirective.prototype._getTransfer = function (event) {\r\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\r\n    };\r\n    FileDropDirective.prototype._preventAndStop = function (event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n    FileDropDirective.prototype._haveFiles = function (types) {\r\n        if (!types) {\r\n            return false;\r\n        }\r\n        if (types.indexOf) {\r\n            return types.indexOf('Files') !== -1;\r\n        }\r\n        else if (types.contains) {\r\n            return types.contains('Files');\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return FileDropDirective;\r\n}());\r\n__decorate([\r\n    core_1.Input()\r\n], FileDropDirective.prototype, \"uploader\", void 0);\r\n__decorate([\r\n    core_1.Output()\r\n], FileDropDirective.prototype, \"fileOver\", void 0);\r\n__decorate([\r\n    core_1.Output()\r\n], FileDropDirective.prototype, \"onFileDrop\", void 0);\r\n__decorate([\r\n    core_1.HostListener('drop', ['$event'])\r\n], FileDropDirective.prototype, \"onDrop\", null);\r\n__decorate([\r\n    core_1.HostListener('dragover', ['$event'])\r\n], FileDropDirective.prototype, \"onDragOver\", null);\r\n__decorate([\r\n    core_1.HostListener('dragleave', ['$event'])\r\n], FileDropDirective.prototype, \"onDragLeave\", null);\r\nFileDropDirective = __decorate([\r\n    core_1.Directive({ selector: '[ng2FileDrop]' })\r\n], FileDropDirective);\r\nexports.FileDropDirective = FileDropDirective;\r\n","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar core_1 = require(\"@angular/core\");\r\nvar FileSelectDirective = (function () {\r\n    function FileSelectDirective(element) {\r\n        this.onFileSelected = new core_1.EventEmitter();\r\n        this.element = element;\r\n    }\r\n    FileSelectDirective.prototype.getOptions = function () {\r\n        return this.uploader.options;\r\n    };\r\n    FileSelectDirective.prototype.getFilters = function () {\r\n        return {};\r\n    };\r\n    FileSelectDirective.prototype.isEmptyAfterSelection = function () {\r\n        return !!this.element.nativeElement.attributes.multiple;\r\n    };\r\n    FileSelectDirective.prototype.onChange = function () {\r\n        var files = this.element.nativeElement.files;\r\n        var options = this.getOptions();\r\n        var filters = this.getFilters();\r\n        this.uploader.addToQueue(files, options, filters);\r\n        this.onFileSelected.emit(files);\r\n        if (this.isEmptyAfterSelection()) {\r\n            this.element.nativeElement.value = '';\r\n        }\r\n    };\r\n    return FileSelectDirective;\r\n}());\r\n__decorate([\r\n    core_1.Input()\r\n], FileSelectDirective.prototype, \"uploader\", void 0);\r\n__decorate([\r\n    core_1.Output()\r\n], FileSelectDirective.prototype, \"onFileSelected\", void 0);\r\n__decorate([\r\n    core_1.HostListener('change')\r\n], FileSelectDirective.prototype, \"onChange\", null);\r\nFileSelectDirective = __decorate([\r\n    core_1.Directive({ selector: '[ng2FileSelect]' })\r\n], FileSelectDirective);\r\nexports.FileSelectDirective = FileSelectDirective;\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar common_1 = require(\"@angular/common\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar file_drop_directive_1 = require(\"./file-drop.directive\");\r\nvar file_select_directive_1 = require(\"./file-select.directive\");\r\nvar FileUploadModule = (function () {\r\n    function FileUploadModule() {\r\n    }\r\n    return FileUploadModule;\r\n}());\r\nFileUploadModule = __decorate([\r\n    core_1.NgModule({\r\n        imports: [common_1.CommonModule],\r\n        declarations: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective],\r\n        exports: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective]\r\n    })\r\n], FileUploadModule);\r\nexports.FileUploadModule = FileUploadModule;\r\n","\"use strict\";\r\nvar FileType = (function () {\r\n    function FileType() {\r\n    }\r\n    FileType.getMimeClass = function (file) {\r\n        var mimeClass = 'application';\r\n        if (this.mime_psd.indexOf(file.type) !== -1) {\r\n            mimeClass = 'image';\r\n        }\r\n        else if (file.type.match('image.*')) {\r\n            mimeClass = 'image';\r\n        }\r\n        else if (file.type.match('video.*')) {\r\n            mimeClass = 'video';\r\n        }\r\n        else if (file.type.match('audio.*')) {\r\n            mimeClass = 'audio';\r\n        }\r\n        else if (file.type === 'application/pdf') {\r\n            mimeClass = 'pdf';\r\n        }\r\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\r\n            mimeClass = 'compress';\r\n        }\r\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\r\n            mimeClass = 'doc';\r\n        }\r\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\r\n            mimeClass = 'xls';\r\n        }\r\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\r\n            mimeClass = 'ppt';\r\n        }\r\n        if (mimeClass === 'application') {\r\n            mimeClass = this.fileTypeDetection(file.name);\r\n        }\r\n        return mimeClass;\r\n    };\r\n    FileType.fileTypeDetection = function (inputFilename) {\r\n        var types = {\r\n            'jpg': 'image',\r\n            'jpeg': 'image',\r\n            'tif': 'image',\r\n            'psd': 'image',\r\n            'bmp': 'image',\r\n            'png': 'image',\r\n            'nef': 'image',\r\n            'tiff': 'image',\r\n            'cr2': 'image',\r\n            'dwg': 'image',\r\n            'cdr': 'image',\r\n            'ai': 'image',\r\n            'indd': 'image',\r\n            'pin': 'image',\r\n            'cdp': 'image',\r\n            'skp': 'image',\r\n            'stp': 'image',\r\n            '3dm': 'image',\r\n            'mp3': 'audio',\r\n            'wav': 'audio',\r\n            'wma': 'audio',\r\n            'mod': 'audio',\r\n            'm4a': 'audio',\r\n            'compress': 'compress',\r\n            'zip': 'compress',\r\n            'rar': 'compress',\r\n            '7z': 'compress',\r\n            'lz': 'compress',\r\n            'z01': 'compress',\r\n            'bz2': 'compress',\r\n            'gz': 'compress',\r\n            'pdf': 'pdf',\r\n            'xls': 'xls',\r\n            'xlsx': 'xls',\r\n            'ods': 'xls',\r\n            'mp4': 'video',\r\n            'avi': 'video',\r\n            'wmv': 'video',\r\n            'mpg': 'video',\r\n            'mts': 'video',\r\n            'flv': 'video',\r\n            '3gp': 'video',\r\n            'vob': 'video',\r\n            'm4v': 'video',\r\n            'mpeg': 'video',\r\n            'm2ts': 'video',\r\n            'mov': 'video',\r\n            'doc': 'doc',\r\n            'docx': 'doc',\r\n            'eps': 'doc',\r\n            'txt': 'doc',\r\n            'odt': 'doc',\r\n            'rtf': 'doc',\r\n            'ppt': 'ppt',\r\n            'pptx': 'ppt',\r\n            'pps': 'ppt',\r\n            'ppsx': 'ppt',\r\n            'odp': 'ppt'\r\n        };\r\n        var chunks = inputFilename.split('.');\r\n        if (chunks.length < 2) {\r\n            return 'application';\r\n        }\r\n        var extension = chunks[chunks.length - 1].toLowerCase();\r\n        if (types[extension] === undefined) {\r\n            return 'application';\r\n        }\r\n        else {\r\n            return types[extension];\r\n        }\r\n    };\r\n    return FileType;\r\n}());\r\n/*  MS office  */\r\nFileType.mime_doc = [\r\n    'application/msword',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\r\n    'application/vnd.ms-word.document.macroEnabled.12',\r\n    'application/vnd.ms-word.template.macroEnabled.12'\r\n];\r\nFileType.mime_xsl = [\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.ms-excel',\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\r\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\r\n    'application/vnd.ms-excel.template.macroEnabled.12',\r\n    'application/vnd.ms-excel.addin.macroEnabled.12',\r\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\r\n];\r\nFileType.mime_ppt = [\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.ms-powerpoint',\r\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\r\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\r\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\r\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\r\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\r\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\r\n];\r\n/* PSD */\r\nFileType.mime_psd = [\r\n    'image/photoshop',\r\n    'image/x-photoshop',\r\n    'image/psd',\r\n    'application/photoshop',\r\n    'application/psd',\r\n    'zz-application/zz-winassoc-psd'\r\n];\r\n/* Compressed files */\r\nFileType.mime_compress = [\r\n    'application/x-gtar',\r\n    'application/x-gcompress',\r\n    'application/compress',\r\n    'application/x-tar',\r\n    'application/x-rar-compressed',\r\n    'application/octet-stream',\r\n    'application/x-zip-compressed',\r\n    'application/zip-compressed',\r\n    'application/x-7z-compressed',\r\n    'application/gzip',\r\n    'application/x-bzip2'\r\n];\r\nexports.FileType = FileType;\r\n","\"use strict\";\r\nvar core_1 = require(\"@angular/core\");\r\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\r\nvar file_item_class_1 = require(\"./file-item.class\");\r\nvar file_type_class_1 = require(\"./file-type.class\");\r\nfunction isFile(value) {\r\n    return (File && value instanceof File);\r\n}\r\nvar FileUploader = (function () {\r\n    function FileUploader(options) {\r\n        this.isUploading = false;\r\n        this.queue = [];\r\n        this.progress = 0;\r\n        this._nextIndex = 0;\r\n        this.options = {\r\n            autoUpload: false,\r\n            isHTML5: true,\r\n            filters: [],\r\n            removeAfterUpload: false,\r\n            disableMultipart: false,\r\n            formatDataFunction: function (item) { return item._file; },\r\n            formatDataFunctionIsAsync: false\r\n        };\r\n        this.setOptions(options);\r\n        this.response = new core_1.EventEmitter();\r\n    }\r\n    FileUploader.prototype.setOptions = function (options) {\r\n        this.options = Object.assign(this.options, options);\r\n        this.authToken = this.options.authToken;\r\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\r\n        this.autoUpload = this.options.autoUpload;\r\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\r\n        if (this.options.maxFileSize) {\r\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\r\n        }\r\n        if (this.options.allowedFileType) {\r\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\r\n        }\r\n        if (this.options.allowedMimeType) {\r\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\r\n        }\r\n        for (var i = 0; i < this.queue.length; i++) {\r\n            this.queue[i].url = this.options.url;\r\n        }\r\n    };\r\n    FileUploader.prototype.addToQueue = function (files, options, filters) {\r\n        var _this = this;\r\n        var list = [];\r\n        for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\r\n            var file = files_1[_i];\r\n            list.push(file);\r\n        }\r\n        var arrayOfFilters = this._getFilters(filters);\r\n        var count = this.queue.length;\r\n        var addedFileItems = [];\r\n        list.map(function (some) {\r\n            if (!options) {\r\n                options = _this.options;\r\n            }\r\n            var temp = new file_like_object_class_1.FileLikeObject(some);\r\n            if (_this._isValidFile(temp, arrayOfFilters, options)) {\r\n                var fileItem = new file_item_class_1.FileItem(_this, some, options);\r\n                addedFileItems.push(fileItem);\r\n                _this.queue.push(fileItem);\r\n                _this._onAfterAddingFile(fileItem);\r\n            }\r\n            else {\r\n                var filter = arrayOfFilters[_this._failFilterIndex];\r\n                _this._onWhenAddingFileFailed(temp, filter, options);\r\n            }\r\n        });\r\n        if (this.queue.length !== count) {\r\n            this._onAfterAddingAll(addedFileItems);\r\n            this.progress = this._getTotalProgress();\r\n        }\r\n        this._render();\r\n        if (this.options.autoUpload) {\r\n            this.uploadAll();\r\n        }\r\n    };\r\n    FileUploader.prototype.removeFromQueue = function (value) {\r\n        var index = this.getIndexOfItem(value);\r\n        var item = this.queue[index];\r\n        if (item.isUploading) {\r\n            item.cancel();\r\n        }\r\n        this.queue.splice(index, 1);\r\n        this.progress = this._getTotalProgress();\r\n    };\r\n    FileUploader.prototype.clearQueue = function () {\r\n        while (this.queue.length) {\r\n            this.queue[0].remove();\r\n        }\r\n        this.progress = 0;\r\n    };\r\n    FileUploader.prototype.uploadItem = function (value) {\r\n        var index = this.getIndexOfItem(value);\r\n        var item = this.queue[index];\r\n        var transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\r\n        item._prepareToUploading();\r\n        if (this.isUploading) {\r\n            return;\r\n        }\r\n        this.isUploading = true;\r\n        this[transport](item);\r\n    };\r\n    FileUploader.prototype.cancelItem = function (value) {\r\n        var index = this.getIndexOfItem(value);\r\n        var item = this.queue[index];\r\n        var prop = this.options.isHTML5 ? item._xhr : item._form;\r\n        if (item && item.isUploading) {\r\n            prop.abort();\r\n        }\r\n    };\r\n    FileUploader.prototype.uploadAll = function () {\r\n        var items = this.getNotUploadedItems().filter(function (item) { return !item.isUploading; });\r\n        if (!items.length) {\r\n            return;\r\n        }\r\n        items.map(function (item) { return item._prepareToUploading(); });\r\n        items[0].upload();\r\n    };\r\n    FileUploader.prototype.cancelAll = function () {\r\n        var items = this.getNotUploadedItems();\r\n        items.map(function (item) { return item.cancel(); });\r\n    };\r\n    FileUploader.prototype.isFile = function (value) {\r\n        return isFile(value);\r\n    };\r\n    FileUploader.prototype.isFileLikeObject = function (value) {\r\n        return value instanceof file_like_object_class_1.FileLikeObject;\r\n    };\r\n    FileUploader.prototype.getIndexOfItem = function (value) {\r\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\r\n    };\r\n    FileUploader.prototype.getNotUploadedItems = function () {\r\n        return this.queue.filter(function (item) { return !item.isUploaded; });\r\n    };\r\n    FileUploader.prototype.getReadyItems = function () {\r\n        return this.queue\r\n            .filter(function (item) { return (item.isReady && !item.isUploading); })\r\n            .sort(function (item1, item2) { return item1.index - item2.index; });\r\n    };\r\n    FileUploader.prototype.destroy = function () {\r\n        return void 0;\r\n    };\r\n    FileUploader.prototype.onAfterAddingAll = function (fileItems) {\r\n        return { fileItems: fileItems };\r\n    };\r\n    FileUploader.prototype.onBuildItemForm = function (fileItem, form) {\r\n        return { fileItem: fileItem, form: form };\r\n    };\r\n    FileUploader.prototype.onAfterAddingFile = function (fileItem) {\r\n        return { fileItem: fileItem };\r\n    };\r\n    FileUploader.prototype.onWhenAddingFileFailed = function (item, filter, options) {\r\n        return { item: item, filter: filter, options: options };\r\n    };\r\n    FileUploader.prototype.onBeforeUploadItem = function (fileItem) {\r\n        return { fileItem: fileItem };\r\n    };\r\n    FileUploader.prototype.onProgressItem = function (fileItem, progress) {\r\n        return { fileItem: fileItem, progress: progress };\r\n    };\r\n    FileUploader.prototype.onProgressAll = function (progress) {\r\n        return { progress: progress };\r\n    };\r\n    FileUploader.prototype.onSuccessItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onErrorItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCancelItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCompleteItem = function (item, response, status, headers) {\r\n        return { item: item, response: response, status: status, headers: headers };\r\n    };\r\n    FileUploader.prototype.onCompleteAll = function () {\r\n        return void 0;\r\n    };\r\n    FileUploader.prototype._mimeTypeFilter = function (item) {\r\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\r\n    };\r\n    FileUploader.prototype._fileSizeFilter = function (item) {\r\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\r\n    };\r\n    FileUploader.prototype._fileTypeFilter = function (item) {\r\n        return !(this.options.allowedFileType &&\r\n            this.options.allowedFileType.indexOf(file_type_class_1.FileType.getMimeClass(item)) === -1);\r\n    };\r\n    FileUploader.prototype._onErrorItem = function (item, response, status, headers) {\r\n        item._onError(response, status, headers);\r\n        this.onErrorItem(item, response, status, headers);\r\n    };\r\n    FileUploader.prototype._onCompleteItem = function (item, response, status, headers) {\r\n        item._onComplete(response, status, headers);\r\n        this.onCompleteItem(item, response, status, headers);\r\n        var nextItem = this.getReadyItems()[0];\r\n        this.isUploading = false;\r\n        if (nextItem) {\r\n            nextItem.upload();\r\n            return;\r\n        }\r\n        this.onCompleteAll();\r\n        this.progress = this._getTotalProgress();\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._headersGetter = function (parsedHeaders) {\r\n        return function (name) {\r\n            if (name) {\r\n                return parsedHeaders[name.toLowerCase()] || void 0;\r\n            }\r\n            return parsedHeaders;\r\n        };\r\n    };\r\n    FileUploader.prototype._xhrTransport = function (item) {\r\n        var _this = this;\r\n        var that = this;\r\n        var xhr = item._xhr = new XMLHttpRequest();\r\n        var sendable;\r\n        this._onBeforeUploadItem(item);\r\n        if (typeof item._file.size !== 'number') {\r\n            throw new TypeError('The file specified is no longer valid');\r\n        }\r\n        if (!this.options.disableMultipart) {\r\n            sendable = new FormData();\r\n            this._onBuildItemForm(item, sendable);\r\n            var appendFile = function () { return sendable.append(item.alias, item._file, item.file.name); };\r\n            if (!this.options.parametersBeforeFiles) {\r\n                appendFile();\r\n            }\r\n            // For AWS, Additional Parameters must come BEFORE Files\r\n            if (this.options.additionalParameter !== undefined) {\r\n                Object.keys(this.options.additionalParameter).forEach(function (key) {\r\n                    var paramVal = _this.options.additionalParameter[key];\r\n                    // Allow an additional parameter to include the filename\r\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\r\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\r\n                    }\r\n                    sendable.append(key, paramVal);\r\n                });\r\n            }\r\n            if (this.options.parametersBeforeFiles) {\r\n                appendFile();\r\n            }\r\n        }\r\n        else {\r\n            sendable = this.options.formatDataFunction(item);\r\n        }\r\n        xhr.upload.onprogress = function (event) {\r\n            var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\r\n            _this._onProgressItem(item, progress);\r\n        };\r\n        xhr.onload = function () {\r\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\r\n            var response = _this._transformResponse(xhr.response, headers);\r\n            var gist = _this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\r\n            var method = '_on' + gist + 'Item';\r\n            _this[method](item, response, xhr.status, headers);\r\n            _this._onCompleteItem(item, response, xhr.status, headers);\r\n        };\r\n        xhr.onerror = function () {\r\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\r\n            var response = _this._transformResponse(xhr.response, headers);\r\n            _this._onErrorItem(item, response, xhr.status, headers);\r\n            _this._onCompleteItem(item, response, xhr.status, headers);\r\n        };\r\n        xhr.onabort = function () {\r\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\r\n            var response = _this._transformResponse(xhr.response, headers);\r\n            _this._onCancelItem(item, response, xhr.status, headers);\r\n            _this._onCompleteItem(item, response, xhr.status, headers);\r\n        };\r\n        xhr.open(item.method, item.url, true);\r\n        xhr.withCredentials = item.withCredentials;\r\n        if (this.options.headers) {\r\n            for (var _i = 0, _a = this.options.headers; _i < _a.length; _i++) {\r\n                var header = _a[_i];\r\n                xhr.setRequestHeader(header.name, header.value);\r\n            }\r\n        }\r\n        if (item.headers.length) {\r\n            for (var _b = 0, _c = item.headers; _b < _c.length; _b++) {\r\n                var header = _c[_b];\r\n                xhr.setRequestHeader(header.name, header.value);\r\n            }\r\n        }\r\n        if (this.authToken) {\r\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\r\n        }\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                that.response.emit(xhr.responseText);\r\n            }\r\n        };\r\n        if (this.options.formatDataFunctionIsAsync) {\r\n            sendable.then(function (result) { return xhr.send(JSON.stringify(result)); });\r\n        }\r\n        else {\r\n            xhr.send(sendable);\r\n        }\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._getTotalProgress = function (value) {\r\n        if (value === void 0) { value = 0; }\r\n        if (this.options.removeAfterUpload) {\r\n            return value;\r\n        }\r\n        var notUploaded = this.getNotUploadedItems().length;\r\n        var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\r\n        var ratio = 100 / this.queue.length;\r\n        var current = value * ratio / 100;\r\n        return Math.round(uploaded * ratio + current);\r\n    };\r\n    FileUploader.prototype._getFilters = function (filters) {\r\n        if (!filters) {\r\n            return this.options.filters;\r\n        }\r\n        if (Array.isArray(filters)) {\r\n            return filters;\r\n        }\r\n        if (typeof filters === 'string') {\r\n            var names_1 = filters.match(/[^\\s,]+/g);\r\n            return this.options.filters\r\n                .filter(function (filter) { return names_1.indexOf(filter.name) !== -1; });\r\n        }\r\n        return this.options.filters;\r\n    };\r\n    FileUploader.prototype._render = function () {\r\n        return void 0;\r\n    };\r\n    FileUploader.prototype._queueLimitFilter = function () {\r\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\r\n    };\r\n    FileUploader.prototype._isValidFile = function (file, filters, options) {\r\n        var _this = this;\r\n        this._failFilterIndex = -1;\r\n        return !filters.length ? true : filters.every(function (filter) {\r\n            _this._failFilterIndex++;\r\n            return filter.fn.call(_this, file, options);\r\n        });\r\n    };\r\n    FileUploader.prototype._isSuccessCode = function (status) {\r\n        return (status >= 200 && status < 300) || status === 304;\r\n    };\r\n    FileUploader.prototype._transformResponse = function (response, headers) {\r\n        return response;\r\n    };\r\n    FileUploader.prototype._parseHeaders = function (headers) {\r\n        var parsed = {};\r\n        var key;\r\n        var val;\r\n        var i;\r\n        if (!headers) {\r\n            return parsed;\r\n        }\r\n        headers.split('\\n').map(function (line) {\r\n            i = line.indexOf(':');\r\n            key = line.slice(0, i).trim().toLowerCase();\r\n            val = line.slice(i + 1).trim();\r\n            if (key) {\r\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n            }\r\n        });\r\n        return parsed;\r\n    };\r\n    FileUploader.prototype._onWhenAddingFileFailed = function (item, filter, options) {\r\n        this.onWhenAddingFileFailed(item, filter, options);\r\n    };\r\n    FileUploader.prototype._onAfterAddingFile = function (item) {\r\n        this.onAfterAddingFile(item);\r\n    };\r\n    FileUploader.prototype._onAfterAddingAll = function (items) {\r\n        this.onAfterAddingAll(items);\r\n    };\r\n    FileUploader.prototype._onBeforeUploadItem = function (item) {\r\n        item._onBeforeUpload();\r\n        this.onBeforeUploadItem(item);\r\n    };\r\n    FileUploader.prototype._onBuildItemForm = function (item, form) {\r\n        item._onBuildForm(form);\r\n        this.onBuildItemForm(item, form);\r\n    };\r\n    FileUploader.prototype._onProgressItem = function (item, progress) {\r\n        var total = this._getTotalProgress(progress);\r\n        this.progress = total;\r\n        item._onProgress(progress);\r\n        this.onProgressItem(item, progress);\r\n        this.onProgressAll(total);\r\n        this._render();\r\n    };\r\n    FileUploader.prototype._onSuccessItem = function (item, response, status, headers) {\r\n        item._onSuccess(response, status, headers);\r\n        this.onSuccessItem(item, response, status, headers);\r\n    };\r\n    FileUploader.prototype._onCancelItem = function (item, response, status, headers) {\r\n        item._onCancel(response, status, headers);\r\n        this.onCancelItem(item, response, status, headers);\r\n    };\r\n    return FileUploader;\r\n}());\r\nexports.FileUploader = FileUploader;\r\n","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require(\"./file-upload/file-select.directive\"));\r\n__export(require(\"./file-upload/file-drop.directive\"));\r\n__export(require(\"./file-upload/file-uploader.class\"));\r\n__export(require(\"./file-upload/file-item.class\"));\r\n__export(require(\"./file-upload/file-like-object.class\"));\r\nvar file_upload_module_1 = require(\"./file-upload/file-upload.module\");\r\nexports.FileUploadModule = file_upload_module_1.FileUploadModule;\r\n"],"sourceRoot":""}